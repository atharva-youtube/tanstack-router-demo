/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SearchImport } from './routes/search'
import { Route as PostsImport } from './routes/posts'
import { Route as AboutImport } from './routes/about'
import { Route as Layout1Import } from './routes/_layout1'
import { Route as UserUsernameImport } from './routes/user.$username'
import { Route as Layout1UserRouteImport } from './routes/_layout1/user/route'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const SearchRoute = SearchImport.update({
  path: '/search',
  getParentRoute: () => rootRoute,
} as any)

const PostsRoute = PostsImport.update({
  path: '/posts',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const Layout1Route = Layout1Import.update({
  id: '/_layout1',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const UserUsernameRoute = UserUsernameImport.update({
  path: '/user/$username',
  getParentRoute: () => rootRoute,
} as any)

const Layout1UserRouteRoute = Layout1UserRouteImport.update({
  path: '/user',
  getParentRoute: () => Layout1Route,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_layout1': {
      preLoaderRoute: typeof Layout1Import
      parentRoute: typeof rootRoute
    }
    '/about': {
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/posts': {
      preLoaderRoute: typeof PostsImport
      parentRoute: typeof rootRoute
    }
    '/search': {
      preLoaderRoute: typeof SearchImport
      parentRoute: typeof rootRoute
    }
    '/_layout1/user': {
      preLoaderRoute: typeof Layout1UserRouteImport
      parentRoute: typeof Layout1Import
    }
    '/user/$username': {
      preLoaderRoute: typeof UserUsernameImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  Layout1Route.addChildren([Layout1UserRouteRoute]),
  AboutRoute,
  PostsRoute,
  SearchRoute,
  UserUsernameRoute,
])

/* prettier-ignore-end */
